import os
import sqlite3
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = '7237914704:AAGCgfYcBvNurGqC4Q1ZjFYdNZLbZdVKZ_I'
bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('prints.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS prints (
        name TEXT PRIMARY KEY,
        file_id TEXT NOT NULL
    )
''')
conn.commit()

# –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–º–æ–∂–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å –ø–æ–∫–∞)
categories = {
    "üèãÔ∏è‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç–∑–∞–ª": "–ü—Ä–∏–Ω—Ç—ã –Ω–∞ —Ç–µ–º—É —Å–ø–æ—Ä—Ç–∑–∞–ª–∞ üí™",
    "üë®‚Äçüíº –û—Ñ–∏—Å": "–ü—Ä–∏–Ω—Ç—ã –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–π –∂–∏–∑–Ω–∏ üíº",
    "üçâ –õ–µ—Ç–æ": "–®–∞—à–ª—ã–∫, –ø–∏–≤–æ, –∂–∞—Ä–∞ ‚òÄÔ∏è",
    "üßî‚Äç‚ôÇÔ∏è –ë–∞—Ä–±–µ—Ä—à–æ–ø": "–ú—É–∂—Å–∫–æ–π —Å—Ç–∏–ª—å ‚úÇÔ∏è",
    "üíÖ –ö—Ä–∞—Å–æ—Ç–∞": "–ú–∞–Ω–∏–∫—é—Ä, —Ä–µ—Å–Ω–∏—á–∫–∏ ‚ú®"
}

# /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    for category in categories:
        markup.add(KeyboardButton(category))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ü–µ—Ä–µ—à–ª–∏ —Å—é–¥–∞ –ø—Ä–∏–Ω—Ç –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ:", reply_markup=markup)

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç)
@bot.message_handler(func=lambda msg: msg.text in categories)
def category_handler(message):
    bot.send_message(message.chat.id, categories[message.text])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å file_id
@bot.message_handler(content_types=['photo', 'document'])
def handle_file(message):
    file_id = message.document.file_id if message.document else message.photo[-1].file_id
    file_name = message.document.file_name if message.document else "photo_from_chat"
    name_key = os.path.splitext(file_name)[0].lower().replace(' ', '_')

    cursor.execute("SELECT file_id FROM prints WHERE name = ?", (name_key,))
    row = cursor.fetchone()

    if row:
        # –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å, —Å–ø—Ä–æ—Å–∏–º: –∑–∞–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
        markup = InlineKeyboardMarkup()
        markup.add(
            InlineKeyboardButton("üîÅ –ó–∞–º–µ–Ω–∏—Ç—å", callback_data=f"replace:{name_key}:{file_id}"),
            InlineKeyboardButton("‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip")
        )
        bot.send_message(message.chat.id, f"–ü—Ä–∏–Ω—Ç `{name_key}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup, parse_mode="Markdown")
    else:
        cursor.execute("INSERT INTO prints (name, file_id) VALUES (?, ?)", (name_key, file_id))
        conn.commit()
        bot.send_message(message.chat.id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: `{name_key}`", parse_mode="Markdown")

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞: –∑–∞–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
@bot.callback_query_handler(func=lambda call: call.data.startswith("replace") or call.data == "skip")
def callback_replace(call):
    if call.data == "skip":
        bot.answer_callback_query(call.id, "–ü—Ä–æ–ø—É—â–µ–Ω–æ ‚úÖ")
        return

    _, name_key, new_file_id = call.data.split(":")
    cursor.execute("UPDATE prints SET file_id = ? WHERE name = ?", (new_file_id, name_key))
    conn.commit()
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text=f"üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–æ: `{name_key}`", parse_mode="Markdown")

# –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
@bot.message_handler(func=lambda msg: True)
def search_handler(message):
    query = message.text.lower().replace(" ", "_")
    cursor.execute("SELECT name, file_id FROM prints WHERE name LIKE ?", (f"%{query}%",))
    result = cursor.fetchone()

    if result:
        bot.send_photo(message.chat.id, result[1], caption=f"üîé –ù–∞–π–¥–µ–Ω–æ: {result[0]}")
    else:
        bot.send_message(message.chat.id, "üòï –ü—Ä–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.")

bot.polling(none_stop=True)
