from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import sqlite3

TOKEN = '–¢–í–û–ô_–¢–û–ö–ï–ù'
bot = TeleBot(TOKEN)

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏–Ω—Ç–æ–≤
categories = {
    "üèãÔ∏è‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç–∑–∞–ª": "–ü—Ä–∏–Ω—Ç—ã –Ω–∞ —Ç–µ–º—É —Å–ø–æ—Ä—Ç–∑–∞–ª–∞ üí™",
    "üë®‚Äçüíº –û—Ñ–∏—Å": "–ü—Ä–∏–Ω—Ç—ã –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–π –∂–∏–∑–Ω–∏ üñáÔ∏è",
    "üçâ –õ–µ—Ç–æ": "–®–∞—à–ª—ã–∫–∏, –ø–∏–≤–æ, –∂–∞—Ä–∞ ‚òÄÔ∏è",
    "üé© –ë–∞—Ä–±–µ—Ä—à–æ–ø": "–ú—É–∂—Å–∫–æ–π —Å—Ç–∏–ª—å –∏ –±–æ—Ä–æ–¥–∞ ‚úÇÔ∏è",
    "üíÖ –ö—Ä–∞—Å–æ—Ç–∞": "–ú–∞–Ω–∏–∫—é—Ä, —Ä–µ—Å–Ω–∏—á–∫–∏, —Å–∏—è–µ–º ‚ú®"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
conn = sqlite3.connect("printbase.db", check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS prints (
    name TEXT PRIMARY KEY,
    file_id TEXT
)
""")
conn.commit()

# –•–µ–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    for name in categories:
        markup.add(KeyboardButton(name))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–∏–Ω—Ç–æ–≤:", reply_markup=markup)

# –û—Ç–≤–µ—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
@bot.message_handler(func=lambda m: m.text in categories)
def category_handler(message):
    bot.send_message(message.chat.id, categories[message.text])

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–æ–≤ –ø–æ –ø–µ—Ä–µ—Å—ã–ª–∫–µ
@bot.message_handler(content_types=['document'])
def add_file(message):
    file_name = message.document.file_name
    file_id = message.document.file_id
    cursor.execute("SELECT file_id FROM prints WHERE name = ?", (file_name,))
    row = cursor.fetchone()

    if row:
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("üîÅ –ó–∞–º–µ–Ω–∏—Ç—å", "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –ü—Ä–∏–Ω—Ç —É–∂–µ –µ—Å—Ç—å: {file_name}\n–ó–∞–º–µ–Ω–∏—Ç—å?", reply_markup=markup)

        @bot.message_handler(func=lambda m: m.text in ["üîÅ –ó–∞–º–µ–Ω–∏—Ç—å", "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"])
        def handle_choice(choice):
            if choice.text == "üîÅ –ó–∞–º–µ–Ω–∏—Ç—å":
                cursor.execute("UPDATE prints SET file_id = ? WHERE name = ?", (file_id, file_name))
                conn.commit()
                bot.send_message(message.chat.id, f"üîÑ –û–±–Ω–æ–≤–ª—ë–Ω: {file_name}")
            else:
                bot.send_message(message.chat.id, "‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω–æ")
    else:
        cursor.execute("INSERT INTO prints (name, file_id) VALUES (?, ?)", (file_name, file_id))
        conn.commit()
        bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ:\nüìÑ {file_name}\nüÜî {file_id}")

# –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
@bot.message_handler(func=lambda m: True)
def search_prints(message):
    query = message.text.lower().replace(" ", "").replace("_", "")
    cursor.execute("SELECT name, file_id FROM prints")
    results = []
    for name, file_id in cursor.fetchall():
        simplified = name.lower().replace(" ", "").replace("_", "")
        if query in simplified:
            results.append((name, file_id))

    if results:
        for name, file_id in results:
            bot.send_document(message.chat.id, file_id, caption=name)
    else:
        bot.send_message(message.chat.id, "ü§î –ü—Ä–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.")

bot.polling()
